DROP TABLE IF EXISTS BOOKMARK;
DROP TABLE IF EXISTS RATING;
DROP TABLE IF EXISTS INSTRUCTION;
DROP TABLE IF EXISTS EXPERIMENT_HAS_MATERIAL;
DROP TABLE IF EXISTS MATERIAL;
DROP TABLE IF EXISTS PICTURES;
DROP TABLE IF EXISTS COMMENT;
DROP TABLE IF EXISTS EXPERIMENT;
DROP TABLE IF EXISTS REGISTERED_USER;


CREATE TABLE IF NOT EXISTS  REGISTERED_USER (
    ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    CREATEDAT TIMESTAMP AS CURRENT_TIMESTAMP() NOT NULL,
    UPDATEDAT TIMESTAMP NULL,
    PASSWORD VARCHAR(255) NOT NULL,
    EMAIL VARCHAR(255) NOT NULL,
    LOGGEDIN ENUM('T','F') NOT NULL,
    USERNAME VARCHAR(255) NOT NULL,
    ISCREATOR ENUM('T','F'),
    ISADMIN ENUM('T','F'),
    PRIMARY KEY (ID)
);



CREATE TABLE IF NOT EXISTS EXPERIMENT (
    ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    CREATEDAT TIMESTAMP AS CURRENT_TIMESTAMP() NOT NULL,
    UPDATEDAT TIMESTAMP NULL,
    EXPERIMENTNAME VARCHAR(255),
    DESCRIPTION VARCHAR(500),
    INDOOROUTDOOR ENUM('I','O'),
    REGISTEREDUSERID BIGINT NOT NULL ,
    DIFFICULTY INT NOT NULL,
    VIDEO VARCHAR(500) NULL,
    AGE INT NOT NULL,
    DURATION FLOAT NOT NULL,
    IS_RELEASED ENUM('T','F'),
    PRIMARY KEY (ID),
    FOREIGN KEY (REGISTEREDUSERID) REFERENCES REGISTERED_USER(ID)
);



CREATE TABLE IF NOT EXISTS COMMENT (
    ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    CREATEDAT TIMESTAMP AS CURRENT_TIMESTAMP() NOT NULL,
    UPDATEDAT TIMESTAMP NULL,
    TEXT VARCHAR(1000),
    REGISTEREDUSERID BIGINT NOT NULL,
    EXPERIMENTID BIGINT NOT NULL,
    PRIMARY KEY (ID),
    FOREIGN KEY (REGISTEREDUSERID) REFERENCES REGISTERED_USER(ID),
    FOREIGN KEY (EXPERIMENTID) REFERENCES EXPERIMENT(ID)
);



CREATE TABLE IF NOT EXISTS PICTURES (
    ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    CREATEDAT TIMESTAMP AS CURRENT_TIMESTAMP() NOT NULL,
    UPDATEDAT TIMESTAMP NULL,
    PICTURENAME VARCHAR(255) NOT NULL,
    COMMENTID BIGINT NULL,
    EXPERIMENTID BIGINT NULL,
    PRIMARY KEY (ID),
    FOREIGN KEY (EXPERIMENTID) REFERENCES EXPERIMENT(ID),
    FOREIGN KEY (COMMENTID) REFERENCES COMMENT(ID)
);



CREATE TABLE IF NOT EXISTS MATERIAL (
    ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    CREATEDAT TIMESTAMP AS CURRENT_TIMESTAMP() NOT NULL,
    UPDATEDAT TIMESTAMP NULL,
    MATERIALNAME VARCHAR(100) NOT NULL,
    PRIMARY KEY (ID)
);



CREATE TABLE IF NOT EXISTS EXPERIMENT_HAS_MATERIAL (
    ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    CREATEDAT TIMESTAMP AS CURRENT_TIMESTAMP() NOT NULL,
    UPDATEDAT TIMESTAMP NULL,
    MATERIALID BIGINT NOT NULL,
    EXPERIMENTID BIGINT NOT NULL,
    PRIMARY KEY (ID),
    FOREIGN KEY (EXPERIMENTID) REFERENCES EXPERIMENT(ID),
    FOREIGN KEY (MATERIALID) REFERENCES MATERIAL(ID)
);



CREATE TABLE IF NOT EXISTS INSTRUCTION (
    ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    CREATEDAT TIMESTAMP AS CURRENT_TIMESTAMP() NOT NULL,
    UPDATEDAT TIMESTAMP NULL,
    TEXT VARCHAR(1000) NOT NULL,
    EXPERIMENTID BIGINT NOT NULL,
    PRIMARY KEY (ID),
    FOREIGN KEY (EXPERIMENTID) REFERENCES EXPERIMENT(ID)
);



CREATE TABLE IF NOT EXISTS RATING (
    ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    CREATEDAT TIMESTAMP AS CURRENT_TIMESTAMP() NOT NULL,
    UPDATEDAT TIMESTAMP NULL,
    RATINGVALUE INT NOT NULL,
    EXPERIMENTID BIGINT NOT NULL,
    REGISTEREDUSERID BIGINT NOT NULL,
    PRIMARY KEY (ID),
    FOREIGN KEY (REGISTEREDUSERID) REFERENCES REGISTERED_USER(ID),
    FOREIGN KEY (EXPERIMENTID) REFERENCES EXPERIMENT(ID)
);



CREATE TABLE IF NOT EXISTS BOOKMARK (
    ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    CREATEDAT TIMESTAMP AS CURRENT_TIMESTAMP() NOT NULL,
    UPDATEDAT TIMESTAMP NULL,
    EXPERIMENTID BIGINT NOT NULL,
    REGISTEREDUSERID BIGINT NOT NULL,
    PRIMARY KEY (ID),
    FOREIGN KEY (REGISTEREDUSERID) REFERENCES REGISTERED_USER(ID),
    FOREIGN KEY (EXPERIMENTID) REFERENCES EXPERIMENT(ID)
);